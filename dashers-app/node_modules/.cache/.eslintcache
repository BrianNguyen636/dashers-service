[{"/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/index.js":"1","/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/App.js":"2","/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/reportWebVitals.js":"3","/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/pages/OrderSum.js":"4","/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/pages/RestaurantPage.js":"5","/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/pages/RestaurantDetail.js":"6","/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/pages/userRegistration.js":"7","/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/pages/mapPage.js":"8"},{"size":535,"mtime":1700623389072,"results":"9","hashOfConfig":"10"},{"size":932,"mtime":1702274382445,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1700623389073,"results":"12","hashOfConfig":"10"},{"size":2084,"mtime":1702179700055,"results":"13","hashOfConfig":"10"},{"size":3338,"mtime":1702272587392,"results":"14","hashOfConfig":"10"},{"size":7304,"mtime":1702264138457,"results":"15","hashOfConfig":"10"},{"size":3787,"mtime":1702175883723,"results":"16","hashOfConfig":"17"},{"size":2598,"mtime":1702273895763,"results":"18","hashOfConfig":"10"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eca8ub",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":9,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9gy99f",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/index.js",[],[],"/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/App.js",[],[],"/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/reportWebVitals.js",[],[],"/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/pages/OrderSum.js",["46","47"],[],"import {useState, React} from \"react\";\nimport './OrderSum.css';\n\nfunction OrderSum() {\n    let orderTotal\n    const [items, setItem] = useState([]);\n    items.push({\n        name: \"Test Item\",\n        price: 100\n    });\n    const [customer, setCustomer] = useState(\n        {\n            name: \"John Doe\",\n            address: \"Grove Street\"\n        }\n    );\n\n    return (\n        <div> \n            <div class = \"navbar bg-dark\">\n                <h1 style={{color:\"white\", paddingLeft:\"20px\"}}> <button class = \"btn btn-secondary\">...</button>  Dashers</h1>\n            </div>\n            <br/><br/>\n            <div class = \"card\" id = \"orderSum\">\n                <br/>\n                <h1>Order Summary</h1>\n                <hr/>\n                <div id = \"orderBody\">\n                    <ul id = \"itemsOrdered\">\n                        <li>{items[0].name}</li>\n                        <ul>\n                            <li>{items[0].price}</li>\n                        </ul>\n                    </ul>\n                    <p>Order Total: {orderTotal}</p>\n                    <button class = \"btn btn-primary\">Edit Order</button>\n                </div>\n                <hr/>\n                <h1>Order Details </h1>\n                <hr/>\n                <div id = \"orderDetails\">\n                    <ul id = \"detailList\">\n                        <li>Customer Name: {customer.name}</li>\n                        <li>Delivery Address: {customer.address}</li>\n                        <li>Payment: {}</li>\n                        <li>Test:</li>\n                    </ul>\n                    <button class = \"btn btn-primary\">Edit Details</button>\n                </div>\n                <hr/>\n            \n                <button type = \"button\" class = \"btn btn-primary\"> Place Order </button>\n                <br/>\n            </div>\n        </div>\n    );\n};\n\nexport default OrderSum;\n\n//EXAMPLE\n//setArtists( // Replace the state\n//  [ // with a new array\n//    ...artists, // that contains all the old items\n//    { id: nextId++, name: name } // and one new item at the end\n//  ]\n//);","/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/pages/RestaurantPage.js",["48","49"],[],"import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './restaurantPage.css';\nimport { Navbar, Nav, Card, Button, Form, FormControl } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst RestaurantPage = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [hoveredCard, setHoveredCard] = useState(null);\n\n  useEffect(() => {\n    const getRestaurants = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/restaurant');\n        setRestaurants(response.data);\n      } catch (error) {\n        console.error('Error fetching restaurant data:', error);\n      }\n    };\n\n    getRestaurants();\n  }, []);\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n  };\n  const filteredRestaurants = restaurants.filter((restaurant) =>\n    restaurant && restaurant.Name && restaurant.Name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n  const handleCardHover = (index) => {\n    setHoveredCard(index);\n  };\n\n  const handleCardLeave = () => {\n    setHoveredCard(null);\n  };\n\n  // Navbar state\n  const [navbarOpen, setNavbarOpen] = useState(false);\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"navbar bg-dark\">\n        <Navbar.Brand href=\"/home\">\n          <Button variant=\"secondary\" className=\"menu-btn\">Dashers</Button>\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/res\">Restaurant</Nav.Link>\n        </Nav>\n\n        {/* shopping cart button */}\n        <Link to=\"/order\" className=\"ms-auto\">\n          <Button variant=\"primary\">Shopping Cart</Button>\n        </Link>\n      </Navbar>\n      <div className=\"container mt-5\">\n        <h1 className=\"text-center mb-4\">Explore Restaurants</h1>\n        <div>\n          {/* search bar */}\n          <Form className=\"mb-3\">\n            <FormControl\n              type=\"text\"\n              placeholder=\"Search for a restaurant...\"\n              value={searchTerm}\n              onChange={handleSearch}\n            />\n          </Form>\n        </div>\n        <div className=\"row\">\n          {filteredRestaurants.map((restaurant, index) => (\n            <div key={restaurant.RestaurantID} className=\"col-md-4 mb-4\" onMouseEnter={() => handleCardHover(index)}\n              onMouseLeave={handleCardLeave}>\n              <Link to={`/restaurant/detail/${restaurant.RestaurantID}`} style={{ textDecoration: 'none' }}>\n                <Card className=\"custom-card\">\n                  <Card.Img variant=\"top\" src={restaurant.Image} className=\"card-image\" />\n                  <Card.Body>\n                    <Card.Title>{restaurant.Name}</Card.Title>\n                    {hoveredCard === index && (\n                      <div className=\"blur-overlay\">\n                        <p className=\"view-menu-text\">View Full Menu</p>\n                      </div>\n                    )}\n                    <Card.Text>Review: {restaurant.Rating}/10</Card.Text>\n                    <Card.Text>Popular items: {restaurant.Popular_Item}</Card.Text>\n                  </Card.Body>\n                </Card>\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RestaurantPage;","/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/pages/RestaurantDetail.js",["50","51"],[],"import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './restaurantPage.css';\nimport { Navbar, Nav, Card, Button, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nconst RestaurantDetail = () => {\n    const { RestaurantID } = useParams();\n    const [restaurant, setRestaurant] = useState({});\n    const [menu, setMenu] = useState({});\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        const getRestaurant = async () => {\n            try {\n                const restaurantResponse = await axios.get(`http://localhost:4000/restaurant/${RestaurantID}`);\n                setRestaurant(restaurantResponse.data);\n                const menuResponse = await axios.get(`http://localhost:4000/restaurant/${RestaurantID}/items`);\n                setMenu(menuResponse.data);\n                const reviewsResponse = await axios.get(`http://localhost:4000/review/restaurant/${RestaurantID}`);\n                setReviews(reviewsResponse.data);\n            } catch (error) {\n                console.error('Error fetching restaurant data:', error);\n            }\n        };\n\n        getRestaurant();\n    }, []);\n\n    // Function to handle adding an item to the cart\n    const AddToCart = async (menuItem) => {\n        try {\n            // check if order exists\n            // replace 0 with customerID\n            // const param = {\n            //     OrderStatus: 'In-Progress',\n            // };\n            const status = \"In-Progress\";\n            const orderExists = await axios.get(`http://localhost:4000/customer/0/orders?OrderStatus=\"${status}\"`, {\n                // params: param,\n            });\n            let orderID;\n            let orderItems;\n            if (orderExists.data && orderExists.data.length > 0) {\n                const exists = orderExists.data;\n                orderID = exists[0].OrderID;\n                console.log(orderID);\n            } else {\n                // no orders found\n                console.log(\"No orders found\");\n                // creates new order\n                const body = {\n                    CustomerID: 0,\n                    DeliveryAddress: \"saddsa\",\n                    PaymentStatus: \"sida\",\n                    OrderStatus: \"In-Progress\",\n                };\n                const orderResponse = await axios.post(`http://localhost:4000/orders`, body);\n                const order = orderResponse.data;\n                orderID = order.ID;\n            }\n            orderItems = {\n                OrderID: orderID,\n                ItemID: menuItem.ItemID,\n                Quantity: 1,\n            };\n            // add order items to order\n            const itemResponse = await axios.post(`http://localhost:4000/orders/${orderID}/items`, orderItems)\n            console.log(`Added ${menuItem.Name} to the cart`);\n        } catch (error) {\n            console.error('Error adding to cart', error);\n        }\n\n    };\n\n    return (\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" className=\"navbar bg-dark\">\n                <Navbar.Brand href=\"/home\">\n                    <Button variant=\"secondary\" className=\"menu-btn\">Dashers</Button>\n                </Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/res\">Restaurant</Nav.Link>\n                </Nav>\n\n                {/* shopping cart button */}\n                <Link to=\"/order\" className=\"ms-auto\">\n                    <Button variant=\"primary\">Shopping Cart</Button>\n                </Link>\n            </Navbar>\n            <div className=\"container mt-5\">\n                <h1 className=\"text-center mb-4\">{restaurant.Name} Menu</h1>\n                {Object.keys(restaurant).length > 0 ? (\n                    <div>\n                        <div className=\"image-container\">\n                            <img src={restaurant[0].Image} alt={restaurant[0].Name} className=\"image\" />\n                        </div>\n                        <h1 id=\"Title\" className=\"text-left mt-3\">{restaurant[0].Name}</h1>\n                        <h4>\n                            <p>Rating: {restaurant[0].Rating}</p>\n                            <p>Popular Item: {restaurant[0].Popular_Item}</p>\n                        </h4>\n                        <div className=\"menu-items mt-4\">\n                            {menu && menu.length > 0 ? (\n                                <Row xs={1} md={3} className=\"g-4\">\n                                    {menu.map((menuItem, index) => (\n                                        <Col key={index}>\n                                            <Card className=\"mb-3\">\n                                                <Card.Body>\n                                                    <Card.Title>{menuItem.Name}</Card.Title>\n                                                    <div>\n                                                        <p>{menuItem.Category}</p>\n                                                        <p>Price: ${menuItem.Price}</p>\n                                                        <p>Calories: {menuItem.Calories}</p>\n                                                    </div>\n                                                    <Button variant=\"primary\" onClick={() => AddToCart(menuItem)}>\n                                                        Add to Cart\n                                                    </Button>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                    ))}\n                                </Row>\n                            ) : (\n                                <p>No menu items available.</p>\n                            )}\n                        </div>\n\n                        <div className=\"customer-reviews mt-4\">\n                            <h2>Customer Reviews</h2>\n                            {reviews.length > 0 ? (\n                                <Row xs={1} md={3} className=\"g-4\">\n                                    {reviews.map((review, index) => (\n                                        <Col key={index}>\n                                            <Card>\n                                                <Card.Body>\n                                                    <Card.Title>{review.Name}:</Card.Title>\n                                                    <div>{review.Rating}/5</div>\n                                                    <br></br>\n                                                    <div><p id=\"reviewText\">Customer states:</p> {review.Body}</div>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                    ))}\n                                </Row>\n                            ) : (\n                                <p>No reviews yet.</p>\n                            )}\n                        </div>\n                    </div>\n                ) : (\n                    <p>Loading...</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default RestaurantDetail;\n","/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/pages/userRegistration.js",["52","53","54","55","56","57","58","59","60"],[],"/Users/amritpsingh/460 Project/dashers-service/dashers-app/src/pages/mapPage.js",[],[],{"ruleId":"61","severity":1,"message":"62","line":6,"column":19,"nodeType":"63","messageId":"64","endLine":6,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":11,"column":22,"nodeType":"63","messageId":"64","endLine":11,"endColumn":33},{"ruleId":"61","severity":1,"message":"66","line":40,"column":10,"nodeType":"63","messageId":"64","endLine":40,"endColumn":20},{"ruleId":"61","severity":1,"message":"67","line":40,"column":22,"nodeType":"63","messageId":"64","endLine":40,"endColumn":35},{"ruleId":"68","severity":1,"message":"69","line":30,"column":8,"nodeType":"70","endLine":30,"endColumn":10,"suggestions":"71"},{"ruleId":"61","severity":1,"message":"72","line":70,"column":19,"nodeType":"63","messageId":"64","endLine":70,"endColumn":31},{"ruleId":"73","severity":2,"message":"74","line":6,"column":41,"nodeType":"63","endLine":6,"endColumn":49},{"ruleId":"73","severity":2,"message":"74","line":7,"column":47,"nodeType":"63","endLine":7,"endColumn":55},{"ruleId":"73","severity":2,"message":"74","line":8,"column":39,"nodeType":"63","endLine":8,"endColumn":47},{"ruleId":"73","severity":2,"message":"74","line":9,"column":45,"nodeType":"63","endLine":9,"endColumn":53},{"ruleId":"73","severity":2,"message":"74","line":10,"column":35,"nodeType":"63","endLine":10,"endColumn":43},{"ruleId":"73","severity":2,"message":"74","line":11,"column":45,"nodeType":"63","endLine":11,"endColumn":53},{"ruleId":"73","severity":2,"message":"74","line":12,"column":43,"nodeType":"63","endLine":12,"endColumn":51},{"ruleId":"73","severity":2,"message":"74","line":13,"column":41,"nodeType":"63","endLine":13,"endColumn":49},{"ruleId":"73","severity":2,"message":"74","line":14,"column":39,"nodeType":"63","endLine":14,"endColumn":47},"no-unused-vars","'setItem' is assigned a value but never used.","Identifier","unusedVar","'setCustomer' is assigned a value but never used.","'navbarOpen' is assigned a value but never used.","'setNavbarOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'RestaurantID'. Either include it or remove the dependency array.","ArrayExpression",["75"],"'itemResponse' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"userRegistration\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".",{"desc":"76","fix":"77"},"Update the dependencies array to be: [RestaurantID]",{"range":"78","text":"79"},[1271,1273],"[RestaurantID]"]